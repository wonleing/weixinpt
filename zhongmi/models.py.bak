# -*- coding: utf-8 -*-
# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#     * Rearrange models' order
#     * Make sure each model has one field with primary_key=True
# Feel free to rename the models, but don't rename db_table values or field names.
#
# Also note: You'll have to insert the output of 'django-admin.py sqlcustom [appname]'
# into your database.
from django.db import models

def getModel(dbtable):
    class MyClassMetaclass(models.base.ModelBase):
        def __new__(cls, name, bases, attrs):
            name += dbtable
            return models.base.ModelBase.__new__(cls, name, bases, attrs)
    class MyClass(models.Model):
        __metaclass__ = MyClassMetaclass
        id = models.AutoField(primary_key=True)
        title = models.CharField('标题', max_length=50L, blank=True)
        description = models.CharField('描述', max_length=1000L, blank=True)
        price = models.CharField('价格', max_length=20L, blank=True)
        pic = models.CharField('图片URL', max_length=200L, blank=True)
        link = models.CharField('链接URL', max_length=200L, blank=True)
        class Meta:
            try:
                if ZhongmiMain.objects.get(id=dbtable.split("_")[-1]).type != 2:
                    verbose_name = '预留'
                    verbose_name_plural = '预留'
                else:
                    verbose_name = dbtable.split("_")[-1]+" - "+ZhongmiMain.objects.get(id=dbtable.split("_")[-1]).title
                    verbose_name_plural = dbtable.split("_")[-1]+" - "+ZhongmiMain.objects.get(id=dbtable.split("_")[-1]).title
            except:
                    verbose_name = '未填加'
                    verbose_name_plural = '未填加'
            db_table = dbtable
        def __unicode__(self):
            return self.title
    return MyClass

class ZhongmiMain(models.Model):
    id = models.AutoField(primary_key=True)
    title = models.CharField('标题', max_length=50L, blank=True)
    description = models.CharField('描述', max_length=1000L, blank=True)
    pic = models.CharField('图片URL', max_length=200L, blank=True)
    link = models.CharField('链接URL', max_length=200L, blank=True)
    type = models.IntegerField('类型', blank=False)
    class Meta:
        verbose_name_plural = '主索引'
        verbose_name = '主索引'
        db_table = 'zhongmi_main'
    def __unicode__(self):
        return self.title

class ZhongmiChannel(models.Model):
    channelid = models.IntegerField('渠道编号', primary_key=True)
    name = models.CharField('店名', max_length=50L, blank=True)
    address = models.CharField('地址', max_length=50L, blank=True)
    phone = models.CharField('电话', max_length=50L, blank=True)
    password = models.CharField('密码', max_length=50L, blank=True)
    class Meta:
        verbose_name_plural = '渠道信息'
        verbose_name = '渠道信息'
        db_table = 'zhongmi_channel'
    def __unicode__(self):
        return self.name

class ZhongmiCustomer(models.Model):
    customerid = models.AutoField('客户号', primary_key=True)
    wxid = models.CharField('微信ID', max_length=200L, blank=True)
    name = models.CharField('姓名', max_length=50L, blank=True)
    phone = models.CharField('电话', max_length=50L, blank=True)
    gender = models.CharField('性别', max_length=10L, blank=True)
    age = models.IntegerField('年龄', blank=True)
    adress = models.CharField('地址', max_length=200L, blank=True)
    channelid = models.IntegerField('渠道编号', default=5)
    grade = models.IntegerField('等级', default=1)
    saler = models.CharField('推荐人电话', max_length=50L, blank=True)
    amount = models.FloatField('消费总额', default=0)
    point = models.FloatField('积分', default=0)
    class Meta:
        verbose_name_plural = '会员信息'
        verbose_name = '会员信息'
        db_table = 'zhongmi_customer'
    def __unicode__(self):
        return self.name + " - " + self.phone

class ZhongmiItems(models.Model):
    itemid = models.AutoField('商品编号', primary_key=True)
    name = models.CharField('商品名称', max_length=50L, blank=True)
    price = models.FloatField('价格', blank=True)
    class Meta:
        verbose_name_plural = '商品信息'
        verbose_name = '商品信息'
        db_table = 'zhongmi_items'
    def __unicode__(self):
        return self.itemid + " - " + self.name

class ZhongmiSales(models.Model):
    salesid = models.AutoField('消费流水号', primary_key=True)
    customerid = models.IntegerField('客户号')
    channelid = models.IntegerField('渠道编号', blank=True)
    date = models.DateTimeField('日期', auto_now=True)
    total = models.FloatField('总价', default=0)
    class Meta:
        verbose_name_plural = '消费订单'
        verbose_name = '消费订单'
        db_table = 'zhongmi_sales'
    def __unicode__(self):
        return self.salesid + " - " + self.date

class ZhongmiSalesdetail(models.Model):
    detailid = models.AutoField('明细流水号', primary_key=True)
    salesid = models.IntegerField('消费流水号')
    itemid = models.IntegerField('商品编号')
    amount = models.IntegerField('数量', default=0)
    class Meta:
        verbose_name_plural = '消费明细'
        verbose_name = '消费明细'
        db_table = 'zhongmi_salesdetail'
    def __unicode__(self):
        return self.detailid + " - " + self.salesid

class ZhongmiShops(models.Model):
    grade = models.IntegerField('等级', primary_key=True)
    discount = models.FloatField('折扣', default=1)
    description = models.CharField('商城描述', max_length=100L, blank=True)
    link = models.CharField('商城链接', max_length=200L, blank=True)
    class Meta:
        verbose_name_plural = '商城表'
        verbose_name = '商城表'
        db_table = 'zhongmi_shops'
    def __unicode__(self):
        return self.grade + " - " + self.description

for r in ZhongmiMain.objects.filter(type=2):
    globals()['Zhongmi'+str(r.id)] = getModel('zhongmi_'+str(r.id))
